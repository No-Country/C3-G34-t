// <auto-generated />
using System;
using MaxionMontichV2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MaxionMontichV2.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220217220018_MI")]
    partial class MI
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("MaxionMontichV2.Models.Elevadores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlantaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlantaId");

                    b.ToTable("Elevadores");
                });

            modelBuilder.Entity("MaxionMontichV2.Models.FormElevadores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("opcionesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("opcionesId");

                    b.ToTable("Form_Elevadores");
                });

            modelBuilder.Entity("MaxionMontichV2.Models.FormHyM", b =>
                {
                    b.Property<int>("IdForHyM")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BarreraOpticaEnclavamientoElectrico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarrosEmbalajes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CondicionesInseguras")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoblesPulsadores")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EPP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Entrenamiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EquipoMaquina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuinchesBalanceadores")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HerramientasManuales")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Iluminacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParadaDeEmergencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerdidasAireAguaAceite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Protecciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PuertasTablerosElectricos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Puesto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RespSolucion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("limpiezaYorganizacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("opcionesId")
                        .HasColumnType("int");

                    b.HasKey("IdForHyM");

                    b.HasIndex("opcionesId");

                    b.ToTable("Form_Herra_Y_Maq");
                });

            modelBuilder.Entity("MaxionMontichV2.Models.FormTablerosElectricos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CarteleriaBuenEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarteleriaEPP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarteleriaSeñalizada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cerradura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EPPCalzadoDielectrico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EPPGuantesDielectrico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EPPLentes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MPCCandadosTarjetas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MPCProcEscritos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MPCTableroProtegido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Matafuegos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrdenLimpieza")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RespSolucion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableroLibre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableroYSector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("opcionesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("opcionesId");

                    b.ToTable("Form_Tab_Electricos");
                });

            modelBuilder.Entity("MaxionMontichV2.Models.HyM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlantaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlantaId");

                    b.ToTable("Herra_Y_Maq");
                });

            modelBuilder.Entity("MaxionMontichV2.Models.Opciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Cumple")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoAplica")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoCumple")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Opciones");
                });

            modelBuilder.Entity("MaxionMontichV2.Models.Planta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Planta");
                });

            modelBuilder.Entity("MaxionMontichV2.Models.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("MaxionMontichV2.Models.TablerosElectricos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlantaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlantaId");

                    b.ToTable("Tab_Electricos");
                });

            modelBuilder.Entity("MaxionMontichV2.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<int?>("rolId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("rolId");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("MaxionMontichV2.Models.Elevadores", b =>
                {
                    b.HasOne("MaxionMontichV2.Models.Planta", "planta")
                        .WithMany("Elevadores")
                        .HasForeignKey("PlantaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("planta");
                });

            modelBuilder.Entity("MaxionMontichV2.Models.FormElevadores", b =>
                {
                    b.HasOne("MaxionMontichV2.Models.Opciones", "opciones")
                        .WithMany("FormElevadores")
                        .HasForeignKey("opcionesId");

                    b.Navigation("opciones");
                });

            modelBuilder.Entity("MaxionMontichV2.Models.FormHyM", b =>
                {
                    b.HasOne("MaxionMontichV2.Models.Opciones", "opciones")
                        .WithMany("FormHyM")
                        .HasForeignKey("opcionesId");

                    b.Navigation("opciones");
                });

            modelBuilder.Entity("MaxionMontichV2.Models.FormTablerosElectricos", b =>
                {
                    b.HasOne("MaxionMontichV2.Models.Opciones", "opciones")
                        .WithMany("FormTablerosElec")
                        .HasForeignKey("opcionesId");

                    b.Navigation("opciones");
                });

            modelBuilder.Entity("MaxionMontichV2.Models.HyM", b =>
                {
                    b.HasOne("MaxionMontichV2.Models.Planta", "planta")
                        .WithMany("HyM")
                        .HasForeignKey("PlantaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("planta");
                });

            modelBuilder.Entity("MaxionMontichV2.Models.TablerosElectricos", b =>
                {
                    b.HasOne("MaxionMontichV2.Models.Planta", "planta")
                        .WithMany("TablerosElec")
                        .HasForeignKey("PlantaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("planta");
                });

            modelBuilder.Entity("MaxionMontichV2.Models.Usuario", b =>
                {
                    b.HasOne("MaxionMontichV2.Models.Rol", "rol")
                        .WithMany("ListUusarios")
                        .HasForeignKey("rolId");

                    b.Navigation("rol");
                });

            modelBuilder.Entity("MaxionMontichV2.Models.Opciones", b =>
                {
                    b.Navigation("FormElevadores");

                    b.Navigation("FormHyM");

                    b.Navigation("FormTablerosElec");
                });

            modelBuilder.Entity("MaxionMontichV2.Models.Planta", b =>
                {
                    b.Navigation("Elevadores");

                    b.Navigation("HyM");

                    b.Navigation("TablerosElec");
                });

            modelBuilder.Entity("MaxionMontichV2.Models.Rol", b =>
                {
                    b.Navigation("ListUusarios");
                });
#pragma warning restore 612, 618
        }
    }
}
